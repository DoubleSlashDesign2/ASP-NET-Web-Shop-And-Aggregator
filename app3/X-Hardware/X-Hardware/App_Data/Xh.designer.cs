#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace app0.App_Data
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="DataSource")]
	public partial class XhDataContext : System.Data.Linq.DataContext
	{
        /// <summary>
        /// Adds Linq To SQL Randomization functionality
        /// </summary>
        /// <returns></returns>
        [Function(Name = "NEWID", IsComposable = true)]
        public Guid Random()
        {
            throw new NotImplementedException();
        }

		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertXhCategory(XhCategory instance);
    partial void UpdateXhCategory(XhCategory instance);
    partial void DeleteXhCategory(XhCategory instance);
    partial void InsertXhProduct(XhProduct instance);
    partial void UpdateXhProduct(XhProduct instance);
    partial void DeleteXhProduct(XhProduct instance);
    partial void InsertXhCustomer(XhCustomer instance);
    partial void UpdateXhCustomer(XhCustomer instance);
    partial void DeleteXhCustomer(XhCustomer instance);
    partial void InsertXhImage(XhImage instance);
    partial void UpdateXhImage(XhImage instance);
    partial void DeleteXhImage(XhImage instance);
    partial void InsertXhManufacter(XhManufacter instance);
    partial void UpdateXhManufacter(XhManufacter instance);
    partial void DeleteXhManufacter(XhManufacter instance);
    partial void InsertXhOrder(XhOrder instance);
    partial void UpdateXhOrder(XhOrder instance);
    partial void DeleteXhOrder(XhOrder instance);
    #endregion
		
		public XhDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["DataSourceConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public XhDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public XhDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public XhDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public XhDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<XhCategory> XhCategories
		{
			get
			{
				return this.GetTable<XhCategory>();
			}
		}
		
		public System.Data.Linq.Table<XhProduct> XhProducts
		{
			get
			{
				return this.GetTable<XhProduct>();
			}
		}
		
		public System.Data.Linq.Table<XhCustomer> XhCustomers
		{
			get
			{
				return this.GetTable<XhCustomer>();
			}
		}
		
		public System.Data.Linq.Table<XhImage> XhImages
		{
			get
			{
				return this.GetTable<XhImage>();
			}
		}
		
		public System.Data.Linq.Table<XhManufacter> XhManufacters
		{
			get
			{
				return this.GetTable<XhManufacter>();
			}
		}
		
		public System.Data.Linq.Table<XhOrder> XhOrders
		{
			get
			{
				return this.GetTable<XhOrder>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.XhCategories")]
	public partial class XhCategory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _cat_id;
		
		private string _cat_name;
		
		private EntitySet<XhProduct> _XhProducts;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Oncat_idChanging(int value);
    partial void Oncat_idChanged();
    partial void Oncat_nameChanging(string value);
    partial void Oncat_nameChanged();
    #endregion
		
		public XhCategory()
		{
			this._XhProducts = new EntitySet<XhProduct>(new Action<XhProduct>(this.attach_XhProducts), new Action<XhProduct>(this.detach_XhProducts));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cat_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int cat_id
		{
			get
			{
				return this._cat_id;
			}
			set
			{
				if ((this._cat_id != value))
				{
					this.Oncat_idChanging(value);
					this.SendPropertyChanging();
					this._cat_id = value;
					this.SendPropertyChanged("cat_id");
					this.Oncat_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cat_name", DbType="VarChar(40) NOT NULL", CanBeNull=false)]
		public string cat_name
		{
			get
			{
				return this._cat_name;
			}
			set
			{
				if ((this._cat_name != value))
				{
					this.Oncat_nameChanging(value);
					this.SendPropertyChanging();
					this._cat_name = value;
					this.SendPropertyChanged("cat_name");
					this.Oncat_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="XhCategory_XhProduct", Storage="_XhProducts", ThisKey="cat_id", OtherKey="cat_id")]
		public EntitySet<XhProduct> XhProducts
		{
			get
			{
				return this._XhProducts;
			}
			set
			{
				this._XhProducts.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_XhProducts(XhProduct entity)
		{
			this.SendPropertyChanging();
			entity.XhCategory = this;
		}
		
		private void detach_XhProducts(XhProduct entity)
		{
			this.SendPropertyChanging();
			entity.XhCategory = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.XhProducts")]
	public partial class XhProduct : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _prod_id;
		
		private string _prod_name;
		
		private string _prod_desc;
		
		private double _prod_price;
		
		private int _prod_stock;
		
		private string _prod_model;
		
		private int _img_id;
		
		private System.Nullable<int> _cat_id;
		
		private System.Nullable<int> _man_id;
		
		private EntitySet<XhOrder> _XhOrders;
		
		private EntityRef<XhCategory> _XhCategory;
		
		private EntityRef<XhImage> _XhImage;
		
		private EntityRef<XhManufacter> _XhManufacter;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onprod_idChanging(int value);
    partial void Onprod_idChanged();
    partial void Onprod_nameChanging(string value);
    partial void Onprod_nameChanged();
    partial void Onprod_descChanging(string value);
    partial void Onprod_descChanged();
    partial void Onprod_priceChanging(double value);
    partial void Onprod_priceChanged();
    partial void Onprod_stockChanging(int value);
    partial void Onprod_stockChanged();
    partial void Onprod_modelChanging(string value);
    partial void Onprod_modelChanged();
    partial void Onimg_idChanging(int value);
    partial void Onimg_idChanged();
    partial void Oncat_idChanging(System.Nullable<int> value);
    partial void Oncat_idChanged();
    partial void Onman_idChanging(System.Nullable<int> value);
    partial void Onman_idChanged();
    #endregion
		
		public XhProduct()
		{
			this._XhOrders = new EntitySet<XhOrder>(new Action<XhOrder>(this.attach_XhOrders), new Action<XhOrder>(this.detach_XhOrders));
			this._XhCategory = default(EntityRef<XhCategory>);
			this._XhImage = default(EntityRef<XhImage>);
			this._XhManufacter = default(EntityRef<XhManufacter>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_prod_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int prod_id
		{
			get
			{
				return this._prod_id;
			}
			set
			{
				if ((this._prod_id != value))
				{
					this.Onprod_idChanging(value);
					this.SendPropertyChanging();
					this._prod_id = value;
					this.SendPropertyChanged("prod_id");
					this.Onprod_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_prod_name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string prod_name
		{
			get
			{
				return this._prod_name;
			}
			set
			{
				if ((this._prod_name != value))
				{
					this.Onprod_nameChanging(value);
					this.SendPropertyChanging();
					this._prod_name = value;
					this.SendPropertyChanged("prod_name");
					this.Onprod_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_prod_desc", DbType="Text NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string prod_desc
		{
			get
			{
				return this._prod_desc;
			}
			set
			{
				if ((this._prod_desc != value))
				{
					this.Onprod_descChanging(value);
					this.SendPropertyChanging();
					this._prod_desc = value;
					this.SendPropertyChanged("prod_desc");
					this.Onprod_descChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_prod_price", DbType="Float NOT NULL")]
		public double prod_price
		{
			get
			{
				return this._prod_price;
			}
			set
			{
				if ((this._prod_price != value))
				{
					this.Onprod_priceChanging(value);
					this.SendPropertyChanging();
					this._prod_price = value;
					this.SendPropertyChanged("prod_price");
					this.Onprod_priceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_prod_stock", DbType="Int NOT NULL")]
		public int prod_stock
		{
			get
			{
				return this._prod_stock;
			}
			set
			{
				if ((this._prod_stock != value))
				{
					this.Onprod_stockChanging(value);
					this.SendPropertyChanging();
					this._prod_stock = value;
					this.SendPropertyChanged("prod_stock");
					this.Onprod_stockChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_prod_model", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string prod_model
		{
			get
			{
				return this._prod_model;
			}
			set
			{
				if ((this._prod_model != value))
				{
					this.Onprod_modelChanging(value);
					this.SendPropertyChanging();
					this._prod_model = value;
					this.SendPropertyChanged("prod_model");
					this.Onprod_modelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_img_id", DbType="Int NOT NULL")]
		public int img_id
		{
			get
			{
				return this._img_id;
			}
			set
			{
				if ((this._img_id != value))
				{
					if (this._XhImage.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onimg_idChanging(value);
					this.SendPropertyChanging();
					this._img_id = value;
					this.SendPropertyChanged("img_id");
					this.Onimg_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cat_id", DbType="Int")]
		public System.Nullable<int> cat_id
		{
			get
			{
				return this._cat_id;
			}
			set
			{
				if ((this._cat_id != value))
				{
					if (this._XhCategory.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Oncat_idChanging(value);
					this.SendPropertyChanging();
					this._cat_id = value;
					this.SendPropertyChanged("cat_id");
					this.Oncat_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_man_id", DbType="Int")]
		public System.Nullable<int> man_id
		{
			get
			{
				return this._man_id;
			}
			set
			{
				if ((this._man_id != value))
				{
					if (this._XhManufacter.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onman_idChanging(value);
					this.SendPropertyChanging();
					this._man_id = value;
					this.SendPropertyChanged("man_id");
					this.Onman_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="XhProduct_XhOrder", Storage="_XhOrders", ThisKey="prod_id", OtherKey="prod_id")]
		public EntitySet<XhOrder> XhOrders
		{
			get
			{
				return this._XhOrders;
			}
			set
			{
				this._XhOrders.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="XhCategory_XhProduct", Storage="_XhCategory", ThisKey="cat_id", OtherKey="cat_id", IsForeignKey=true)]
		public XhCategory XhCategory
		{
			get
			{
				return this._XhCategory.Entity;
			}
			set
			{
				XhCategory previousValue = this._XhCategory.Entity;
				if (((previousValue != value) 
							|| (this._XhCategory.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._XhCategory.Entity = null;
						previousValue.XhProducts.Remove(this);
					}
					this._XhCategory.Entity = value;
					if ((value != null))
					{
						value.XhProducts.Add(this);
						this._cat_id = value.cat_id;
					}
					else
					{
						this._cat_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("XhCategory");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="XhImage_XhProduct", Storage="_XhImage", ThisKey="img_id", OtherKey="img_id", IsForeignKey=true)]
		public XhImage XhImage
		{
			get
			{
				return this._XhImage.Entity;
			}
			set
			{
				XhImage previousValue = this._XhImage.Entity;
				if (((previousValue != value) 
							|| (this._XhImage.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._XhImage.Entity = null;
						previousValue.XhProducts.Remove(this);
					}
					this._XhImage.Entity = value;
					if ((value != null))
					{
						value.XhProducts.Add(this);
						this._img_id = value.img_id;
					}
					else
					{
						this._img_id = default(int);
					}
					this.SendPropertyChanged("XhImage");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="XhManufacter_XhProduct", Storage="_XhManufacter", ThisKey="man_id", OtherKey="man_id", IsForeignKey=true)]
		public XhManufacter XhManufacter
		{
			get
			{
				return this._XhManufacter.Entity;
			}
			set
			{
				XhManufacter previousValue = this._XhManufacter.Entity;
				if (((previousValue != value) 
							|| (this._XhManufacter.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._XhManufacter.Entity = null;
						previousValue.XhProducts.Remove(this);
					}
					this._XhManufacter.Entity = value;
					if ((value != null))
					{
						value.XhProducts.Add(this);
						this._man_id = value.man_id;
					}
					else
					{
						this._man_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("XhManufacter");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_XhOrders(XhOrder entity)
		{
			this.SendPropertyChanging();
			entity.XhProduct = this;
		}
		
		private void detach_XhOrders(XhOrder entity)
		{
			this.SendPropertyChanging();
			entity.XhProduct = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.XhCustomers")]
	public partial class XhCustomer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _cust_id;
		
		private string _cust_name;
		
		private string _cust_streetname;
		
		private int _cust_streetnumber;
		
		private int _cust_postalcode;
		
		private string _cust_city;
		
		private int _cust_country_code;
		
		private string _cust_phone;
		
		private string _cust_mail;
		
		private string _cust_password;
		
		private EntitySet<XhOrder> _XhOrders;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Oncust_idChanging(int value);
    partial void Oncust_idChanged();
    partial void Oncust_nameChanging(string value);
    partial void Oncust_nameChanged();
    partial void Oncust_streetnameChanging(string value);
    partial void Oncust_streetnameChanged();
    partial void Oncust_streetnumberChanging(int value);
    partial void Oncust_streetnumberChanged();
    partial void Oncust_postalcodeChanging(int value);
    partial void Oncust_postalcodeChanged();
    partial void Oncust_cityChanging(string value);
    partial void Oncust_cityChanged();
    partial void Oncust_country_codeChanging(int value);
    partial void Oncust_country_codeChanged();
    partial void Oncust_phoneChanging(string value);
    partial void Oncust_phoneChanged();
    partial void Oncust_mailChanging(string value);
    partial void Oncust_mailChanged();
    partial void Oncust_passwordChanging(string value);
    partial void Oncust_passwordChanged();
    #endregion
		
		public XhCustomer()
		{
			this._XhOrders = new EntitySet<XhOrder>(new Action<XhOrder>(this.attach_XhOrders), new Action<XhOrder>(this.detach_XhOrders));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cust_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int cust_id
		{
			get
			{
				return this._cust_id;
			}
			set
			{
				if ((this._cust_id != value))
				{
					this.Oncust_idChanging(value);
					this.SendPropertyChanging();
					this._cust_id = value;
					this.SendPropertyChanged("cust_id");
					this.Oncust_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cust_name", DbType="VarChar(90) NOT NULL", CanBeNull=false)]
		public string cust_name
		{
			get
			{
				return this._cust_name;
			}
			set
			{
				if ((this._cust_name != value))
				{
					this.Oncust_nameChanging(value);
					this.SendPropertyChanging();
					this._cust_name = value;
					this.SendPropertyChanged("cust_name");
					this.Oncust_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cust_streetname", DbType="VarChar(90) NOT NULL", CanBeNull=false)]
		public string cust_streetname
		{
			get
			{
				return this._cust_streetname;
			}
			set
			{
				if ((this._cust_streetname != value))
				{
					this.Oncust_streetnameChanging(value);
					this.SendPropertyChanging();
					this._cust_streetname = value;
					this.SendPropertyChanged("cust_streetname");
					this.Oncust_streetnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cust_streetnumber", DbType="Int NOT NULL")]
		public int cust_streetnumber
		{
			get
			{
				return this._cust_streetnumber;
			}
			set
			{
				if ((this._cust_streetnumber != value))
				{
					this.Oncust_streetnumberChanging(value);
					this.SendPropertyChanging();
					this._cust_streetnumber = value;
					this.SendPropertyChanged("cust_streetnumber");
					this.Oncust_streetnumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cust_postalcode", DbType="Int NOT NULL")]
		public int cust_postalcode
		{
			get
			{
				return this._cust_postalcode;
			}
			set
			{
				if ((this._cust_postalcode != value))
				{
					this.Oncust_postalcodeChanging(value);
					this.SendPropertyChanging();
					this._cust_postalcode = value;
					this.SendPropertyChanged("cust_postalcode");
					this.Oncust_postalcodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cust_city", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string cust_city
		{
			get
			{
				return this._cust_city;
			}
			set
			{
				if ((this._cust_city != value))
				{
					this.Oncust_cityChanging(value);
					this.SendPropertyChanging();
					this._cust_city = value;
					this.SendPropertyChanged("cust_city");
					this.Oncust_cityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cust_country_code", DbType="Int NOT NULL")]
		public int cust_country_code
		{
			get
			{
				return this._cust_country_code;
			}
			set
			{
				if ((this._cust_country_code != value))
				{
					this.Oncust_country_codeChanging(value);
					this.SendPropertyChanging();
					this._cust_country_code = value;
					this.SendPropertyChanged("cust_country_code");
					this.Oncust_country_codeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cust_phone", DbType="VarChar(20)")]
		public string cust_phone
		{
			get
			{
				return this._cust_phone;
			}
			set
			{
				if ((this._cust_phone != value))
				{
					this.Oncust_phoneChanging(value);
					this.SendPropertyChanging();
					this._cust_phone = value;
					this.SendPropertyChanged("cust_phone");
					this.Oncust_phoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cust_mail", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string cust_mail
		{
			get
			{
				return this._cust_mail;
			}
			set
			{
				if ((this._cust_mail != value))
				{
					this.Oncust_mailChanging(value);
					this.SendPropertyChanging();
					this._cust_mail = value;
					this.SendPropertyChanged("cust_mail");
					this.Oncust_mailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cust_password", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string cust_password
		{
			get
			{
				return this._cust_password;
			}
			set
			{
				if ((this._cust_password != value))
				{
					this.Oncust_passwordChanging(value);
					this.SendPropertyChanging();
					this._cust_password = value;
					this.SendPropertyChanged("cust_password");
					this.Oncust_passwordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="XhCustomer_XhOrder", Storage="_XhOrders", ThisKey="cust_id", OtherKey="cust_id")]
		public EntitySet<XhOrder> XhOrders
		{
			get
			{
				return this._XhOrders;
			}
			set
			{
				this._XhOrders.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_XhOrders(XhOrder entity)
		{
			this.SendPropertyChanging();
			entity.XhCustomer = this;
		}
		
		private void detach_XhOrders(XhOrder entity)
		{
			this.SendPropertyChanging();
			entity.XhCustomer = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.XhImages")]
	public partial class XhImage : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _img_id;
		
		private System.Data.Linq.Binary _img_large;
		
		private System.Data.Linq.Binary _img_medium;
		
		private System.Data.Linq.Binary _img_small;
		
		private EntitySet<XhProduct> _XhProducts;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onimg_idChanging(int value);
    partial void Onimg_idChanged();
    partial void Onimg_largeChanging(System.Data.Linq.Binary value);
    partial void Onimg_largeChanged();
    partial void Onimg_mediumChanging(System.Data.Linq.Binary value);
    partial void Onimg_mediumChanged();
    partial void Onimg_smallChanging(System.Data.Linq.Binary value);
    partial void Onimg_smallChanged();
    #endregion
		
		public XhImage()
		{
			this._XhProducts = new EntitySet<XhProduct>(new Action<XhProduct>(this.attach_XhProducts), new Action<XhProduct>(this.detach_XhProducts));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_img_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int img_id
		{
			get
			{
				return this._img_id;
			}
			set
			{
				if ((this._img_id != value))
				{
					this.Onimg_idChanging(value);
					this.SendPropertyChanging();
					this._img_id = value;
					this.SendPropertyChanged("img_id");
					this.Onimg_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_img_large", DbType="VarBinary(MAX) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary img_large
		{
			get
			{
				return this._img_large;
			}
			set
			{
				if ((this._img_large != value))
				{
					this.Onimg_largeChanging(value);
					this.SendPropertyChanging();
					this._img_large = value;
					this.SendPropertyChanged("img_large");
					this.Onimg_largeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_img_medium", DbType="VarBinary(MAX) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary img_medium
		{
			get
			{
				return this._img_medium;
			}
			set
			{
				if ((this._img_medium != value))
				{
					this.Onimg_mediumChanging(value);
					this.SendPropertyChanging();
					this._img_medium = value;
					this.SendPropertyChanged("img_medium");
					this.Onimg_mediumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_img_small", DbType="VarBinary(MAX) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary img_small
		{
			get
			{
				return this._img_small;
			}
			set
			{
				if ((this._img_small != value))
				{
					this.Onimg_smallChanging(value);
					this.SendPropertyChanging();
					this._img_small = value;
					this.SendPropertyChanged("img_small");
					this.Onimg_smallChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="XhImage_XhProduct", Storage="_XhProducts", ThisKey="img_id", OtherKey="img_id")]
		public EntitySet<XhProduct> XhProducts
		{
			get
			{
				return this._XhProducts;
			}
			set
			{
				this._XhProducts.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_XhProducts(XhProduct entity)
		{
			this.SendPropertyChanging();
			entity.XhImage = this;
		}
		
		private void detach_XhProducts(XhProduct entity)
		{
			this.SendPropertyChanging();
			entity.XhImage = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.XhManufacters")]
	public partial class XhManufacter : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _man_id;
		
		private string _man_name;
		
		private EntitySet<XhProduct> _XhProducts;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onman_idChanging(int value);
    partial void Onman_idChanged();
    partial void Onman_nameChanging(string value);
    partial void Onman_nameChanged();
    #endregion
		
		public XhManufacter()
		{
			this._XhProducts = new EntitySet<XhProduct>(new Action<XhProduct>(this.attach_XhProducts), new Action<XhProduct>(this.detach_XhProducts));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_man_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int man_id
		{
			get
			{
				return this._man_id;
			}
			set
			{
				if ((this._man_id != value))
				{
					this.Onman_idChanging(value);
					this.SendPropertyChanging();
					this._man_id = value;
					this.SendPropertyChanged("man_id");
					this.Onman_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_man_name", DbType="VarChar(40) NOT NULL", CanBeNull=false)]
		public string man_name
		{
			get
			{
				return this._man_name;
			}
			set
			{
				if ((this._man_name != value))
				{
					this.Onman_nameChanging(value);
					this.SendPropertyChanging();
					this._man_name = value;
					this.SendPropertyChanged("man_name");
					this.Onman_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="XhManufacter_XhProduct", Storage="_XhProducts", ThisKey="man_id", OtherKey="man_id")]
		public EntitySet<XhProduct> XhProducts
		{
			get
			{
				return this._XhProducts;
			}
			set
			{
				this._XhProducts.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_XhProducts(XhProduct entity)
		{
			this.SendPropertyChanging();
			entity.XhManufacter = this;
		}
		
		private void detach_XhProducts(XhProduct entity)
		{
			this.SendPropertyChanging();
			entity.XhManufacter = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.XhOrders")]
	public partial class XhOrder : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ord_id;
		
		private int _ord_quantity;
		
		private bool _ord_delivered;
		
		private System.DateTime _ord_date;
		
		private int _ord_code;
		
		private int _cust_id;
		
		private int _prod_id;
		
		private EntityRef<XhCustomer> _XhCustomer;
		
		private EntityRef<XhProduct> _XhProduct;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onord_idChanging(int value);
    partial void Onord_idChanged();
    partial void Onord_quantityChanging(int value);
    partial void Onord_quantityChanged();
    partial void Onord_deliveredChanging(bool value);
    partial void Onord_deliveredChanged();
    partial void Onord_dateChanging(System.DateTime value);
    partial void Onord_dateChanged();
    partial void Onord_codeChanging(int value);
    partial void Onord_codeChanged();
    partial void Oncust_idChanging(int value);
    partial void Oncust_idChanged();
    partial void Onprod_idChanging(int value);
    partial void Onprod_idChanged();
    #endregion
		
		public XhOrder()
		{
			this._XhCustomer = default(EntityRef<XhCustomer>);
			this._XhProduct = default(EntityRef<XhProduct>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ord_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ord_id
		{
			get
			{
				return this._ord_id;
			}
			set
			{
				if ((this._ord_id != value))
				{
					this.Onord_idChanging(value);
					this.SendPropertyChanging();
					this._ord_id = value;
					this.SendPropertyChanged("ord_id");
					this.Onord_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ord_quantity", DbType="Int NOT NULL")]
		public int ord_quantity
		{
			get
			{
				return this._ord_quantity;
			}
			set
			{
				if ((this._ord_quantity != value))
				{
					this.Onord_quantityChanging(value);
					this.SendPropertyChanging();
					this._ord_quantity = value;
					this.SendPropertyChanged("ord_quantity");
					this.Onord_quantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ord_delivered", DbType="Bit NOT NULL")]
		public bool ord_delivered
		{
			get
			{
				return this._ord_delivered;
			}
			set
			{
				if ((this._ord_delivered != value))
				{
					this.Onord_deliveredChanging(value);
					this.SendPropertyChanging();
					this._ord_delivered = value;
					this.SendPropertyChanged("ord_delivered");
					this.Onord_deliveredChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ord_date", DbType="Date NOT NULL")]
		public System.DateTime ord_date
		{
			get
			{
				return this._ord_date;
			}
			set
			{
				if ((this._ord_date != value))
				{
					this.Onord_dateChanging(value);
					this.SendPropertyChanging();
					this._ord_date = value;
					this.SendPropertyChanged("ord_date");
					this.Onord_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ord_code", DbType="Int NOT NULL")]
		public int ord_code
		{
			get
			{
				return this._ord_code;
			}
			set
			{
				if ((this._ord_code != value))
				{
					this.Onord_codeChanging(value);
					this.SendPropertyChanging();
					this._ord_code = value;
					this.SendPropertyChanged("ord_code");
					this.Onord_codeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cust_id", DbType="Int NOT NULL")]
		public int cust_id
		{
			get
			{
				return this._cust_id;
			}
			set
			{
				if ((this._cust_id != value))
				{
					if (this._XhCustomer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Oncust_idChanging(value);
					this.SendPropertyChanging();
					this._cust_id = value;
					this.SendPropertyChanged("cust_id");
					this.Oncust_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_prod_id", DbType="Int NOT NULL")]
		public int prod_id
		{
			get
			{
				return this._prod_id;
			}
			set
			{
				if ((this._prod_id != value))
				{
					if (this._XhProduct.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onprod_idChanging(value);
					this.SendPropertyChanging();
					this._prod_id = value;
					this.SendPropertyChanged("prod_id");
					this.Onprod_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="XhCustomer_XhOrder", Storage="_XhCustomer", ThisKey="cust_id", OtherKey="cust_id", IsForeignKey=true)]
		public XhCustomer XhCustomer
		{
			get
			{
				return this._XhCustomer.Entity;
			}
			set
			{
				XhCustomer previousValue = this._XhCustomer.Entity;
				if (((previousValue != value) 
							|| (this._XhCustomer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._XhCustomer.Entity = null;
						previousValue.XhOrders.Remove(this);
					}
					this._XhCustomer.Entity = value;
					if ((value != null))
					{
						value.XhOrders.Add(this);
						this._cust_id = value.cust_id;
					}
					else
					{
						this._cust_id = default(int);
					}
					this.SendPropertyChanged("XhCustomer");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="XhProduct_XhOrder", Storage="_XhProduct", ThisKey="prod_id", OtherKey="prod_id", IsForeignKey=true)]
		public XhProduct XhProduct
		{
			get
			{
				return this._XhProduct.Entity;
			}
			set
			{
				XhProduct previousValue = this._XhProduct.Entity;
				if (((previousValue != value) 
							|| (this._XhProduct.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._XhProduct.Entity = null;
						previousValue.XhOrders.Remove(this);
					}
					this._XhProduct.Entity = value;
					if ((value != null))
					{
						value.XhOrders.Add(this);
						this._prod_id = value.prod_id;
					}
					else
					{
						this._prod_id = default(int);
					}
					this.SendPropertyChanged("XhProduct");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
